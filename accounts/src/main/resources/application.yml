#spring.application.name=accounts


server:
  port: 8080

spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
#    url: jdbc:mysql://localhost:3306/accountsdb
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
#  sql:
#    init:
#      mode: always
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto:
        update
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true



eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "This is the accounts microservice"
    version: "1.0.0"

endpoints:
  shutdown:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true


logging:
  level:
    com:
      eazybytes:
        accounts: DEBUG


resilience4j.circuitBreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000


resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 5
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2